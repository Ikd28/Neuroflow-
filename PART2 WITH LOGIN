from flask_restful import Resource, Api, reqparse
from Form import LoginForm
import random
from flask import Flask, render_template, url_for, request, session, redirect
from flask.ext.pymongo import PyMongo
import bcrypt
app = Flask(__name__)

app.config['MONGO_DBNAME'] = 'mongologinexample'
app.config['MONGO_URI'] = 'mongodb://pretty:printed@ds021731.mlab.com:21731/mongologinexample'

mongo = PyMongo(app)

@app.route('/')
def index():
    if 'username' in session:
        return 'You are logged in as ' + session['username']

    return render_template('index.html')

@app.route('/loginmood', methods=['POST'])
def login():
    users = mongo.db.users
    login_user = users.find_one({'name' : request.form['username']})

    if login_user:
        if bcrypt.hashpw(request.form['pass'].encode('utf-8'), login_user['password'].encode('utf-8')) == login_user['password'].encode('utf-8'):
            session['username'] = request.form['username']
            return redirect(url_for('index'))

    return 'Invalid username/password combination'

@app.route('/register', methods=['POST', 'GET'])
def register():
    if request.method == 'POST':
        users = mongo.db.users
        existing_user = users.find_one({'name' : request.form['username']})

        if existing_user is None:
            hashpass = bcrypt.hashpw(request.form['pass'].encode('utf-8'), bcrypt.gensalt())
            users.insert({'name' : request.form['username'], 'password' : hashpass})
            session['username'] = request.form['username']
            return redirect(url_for('index'))
        
        return 'That username already exists!'

    return render_template('register.html')

api = Api(app)
moods = [{
          "sad": "sad",
          "happy":'happy',
          "normal": "normal"
      }]

@app.route('/getmood',methods=['get'])
def get():
    return random.choice(moods), 200
@app.route('/postmood',methods=['get','post'])
def post():
    parser = reqparse.RequestParser()
    parser.add_argument("mood")
    parser.add_argument("date")
    params = parser.parse_args()

    for mood in moods:
        if id == mood:
              return f"Mood with id {id} already exists", 400
        mood = {
            "id": int(),
            "mood": params["mood"],
            "date": params["date"]
            }

        return mood, 201
 

# 
if __name__ == '__main__':
    app.run(host="localhost", port=3000, debug=True)

